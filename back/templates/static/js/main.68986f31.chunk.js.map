{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","text","result","loaded","TextFieldChange","bind","e","target","value","this","setState","fetch","then","response","status","placeholder","json","debug_info","JSON","stringify","content","students","map","option","List","name","ListItem","ListItemAvatar","Avatar","ListItemText","primary","id","noValidate","autoComplete","TextField","onChange","label","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAqGeA,E,kDAzFb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACLC,KAAK,GACLC,OAAQ,GACRC,QAAQ,GAOf,EAAKC,gBAAgB,EAAKA,gBAAgBC,KAArB,gBAZV,E,mDAcZ,SAAgBC,GACV,IAAIL,EAAOK,EAAEC,OAAOC,MACpBC,KAAKC,SAAS,CAACT,KAAMA,M,+BAQ/B,WAAqB,IAAD,OAClBU,MAAM,OACCC,MAAK,SAAAC,GACJ,OAAIA,EAASC,OAAS,IACb,EAAKJ,UAAS,WACnB,MAAO,CAAEK,YAAa,4BAGnBF,EAASG,UAEjBJ,MAAK,SAAAV,GACJ,EAAKQ,UAAS,WACZ,MAAO,CACLR,SACAC,QAAQ,W,oBAKlB,WAKI,IAAIc,EAAWC,KAAKC,UAAWV,KAAKT,OAChCoB,EACJ,wBAwBA,OAvBIX,KAAKT,MAAMG,QACRM,KAAKT,MAAME,SAClBkB,EAAQ,8BAEPX,KAAKT,MAAME,OAAOmB,SAASC,KAAI,SAAAC,GAAM,OACpC,cAACC,EAAA,EAAD,CAAsBhB,MAAOe,EAAOE,KAApC,SACK,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,QAGJ,cAACC,EAAA,EAAD,CAAcC,QAASP,EAAOE,WAP1BF,EAAOQ,UAmBxB,gCACKd,EACAG,EACH,sBAAOY,YAAU,EAACC,aAAa,MAA/B,SACA,cAACC,EAAA,EAAD,CAAaC,SAAU1B,KAAKL,gBAAiB2B,GAAG,iBAAiBK,MAAM,sB,GAhF3DC,IAAMC,WCCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.68986f31.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n            text:'',\n            result: [],\n            loaded: false\n\n\n    };\n\n    // this.setwindows2_filters = this.setwindows2_filters.bind(this);\n\n     this.TextFieldChange=this.TextFieldChange.bind(this);\n    }\n    TextFieldChange(e) {\n          let text = e.target.value;\n          this.setState({text: text});\n\n\n      }\n\n\n\n\ncomponentDidMount() {\n  fetch(\"api\")\n        .then(response => {\n          if (response.status > 400) {\n            return this.setState(() => {\n              return { placeholder: \"Something went wrong!\" };\n            });\n          }\n          return response.json();\n        })\n        .then(result => {\n          this.setState(() => {\n            return {\n              result,\n              loaded: true\n            };\n          });\n        });\n }\n    render() {\n\n\n\n // };\n        let debug_info=JSON.stringify (this.state)\n        let content=\n        <div></div>;\n        if (this.state.loaded) {\n           if (this.state.result) {\n        content=<div>\n\n        {this.state.result.students.map(option => (\n          <List key={option.id} value={option.name}>\n               <ListItem>\n                 <ListItemAvatar>\n                   <Avatar>\n                     <ImageIcon />\n                   </Avatar>\n                 </ListItemAvatar>\n                 <ListItemText primary={option.name}  />\n               </ListItem>\n\n\n\n\n        </List>\n        ))}\n        </div>\n      };\n    };\n        return (\n    <div>\n        {debug_info}\n        {content}\n      <form  noValidate autoComplete=\"off\">\n      <TextField   onChange={this.TextFieldChange} id=\"standard-basic\" label=\"Standard\" />\n\n     </form>\n     </div>\n);\n\n\n};\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}